(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{326:function(e,r,t){"use strict";t.r(r);var n=t(14),o=Object(n.a)({},(function(){var e=this,r=e._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"面向对象设计的solid原则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#面向对象设计的solid原则"}},[e._v("#")]),e._v(" 面向对象设计的SOLID原则")]),e._v(" "),r("p",[e._v("S.O.L.I.D是面向对象设计和编程(OOD&OOP)中几个重要编码原则(Programming Priciple)的首字母缩写。")]),e._v(" "),r("p",[r("strong",[e._v("SRP")]),e._v(" "),r("a",{attrs:{href:"http://www.objectmentor.com/resources/articles/srp.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("The Single Responsibility Principle"),r("OutboundLink")],1),e._v("\t单一责任原则")]),e._v(" "),r("p",[e._v("当需要修改某个类的时候原因有且只有一个（THERE SHOULD NEVER BE MORE THAN ONE REASON FOR A CLASS TO CHANGE）。换句话说就是让一个类只做一种类型责任，当这个类需要承当其他类型的责任的时候，就需要分解这个类。")]),e._v(" "),r("p",[e._v("**OCP ** "),r("a",{attrs:{href:"http://www.objectmentor.com/resources/articles/ocp.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v(" The Open Closed Principle"),r("OutboundLink")],1),e._v("\t开放封闭原则")]),e._v(" "),r("p",[e._v("软件实体应该是可扩展，而不可修改的。也就是说，对扩展是开放的，而对修改是封闭的。这个原则是诸多面向对象编程原则中最抽象、最难理解的一个。")]),e._v(" "),r("p",[r("strong",[e._v("LSP")]),e._v(" "),r("a",{attrs:{href:"http://www.objectmentor.com/resources/articles/lsp.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("The Liskov Substitution Principle"),r("OutboundLink")],1),e._v(" \t里氏替换原则")]),e._v(" "),r("p",[e._v("当一个子类的实例应该能够替换任何其超类的实例时，它们之间才具有is-A关系")]),e._v(" "),r("p",[r("strong",[e._v("DIP")]),e._v(" "),r("a",{attrs:{href:"http://www.objectmentor.com/resources/articles/dip.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("The Dependency Inversion Principle"),r("OutboundLink")],1),e._v(" \t依赖倒置原则")]),e._v(" "),r("ol",[r("li",[e._v("高层模块不应该依赖于低层模块，二者都应该依赖于抽象")]),e._v(" "),r("li",[e._v("抽象不应该依赖于细节，细节应该依赖于抽象")])]),e._v(" "),r("p",[r("strong",[e._v("ISP")]),e._v(" "),r("a",{attrs:{href:"http://www.objectmentor.com/resources/articles/isp.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("The Interface Segregation Principle"),r("OutboundLink")],1),e._v(" \t接口分离原则")]),e._v(" "),r("p",[e._v("不能强迫用户去依赖那些他们不使用的接口。换句话说，使用多个专门的接口比使用单一的总接口总要好。")])])}),[],!1,null,null,null);r.default=o.exports}}]);